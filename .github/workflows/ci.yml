name: Process Reporter CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test-windows:
    name: Test on Windows
    runs-on: windows-latest
    # No default working-directory here, as not all steps need it.
    # The default working directory for steps will be the root of the checkout (${{ github.workspace }}).
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set Windows Execution Policy
      run: Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force
      shell: pwsh

    - name: Install Pester (Windows)
      run: |
        Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
        Install-Module -Name Pester -Repository PSGallery -Force -SkipPublisherCheck -Scope CurrentUser -Confirm:$false
        Import-Module Pester -ErrorAction SilentlyContinue
      shell: pwsh

    - name: Run Pester Tests (Windows)
      # Set the working directory specifically for this step
      working-directory: ./scripts/windows
      run: Invoke-Pester -Path ./tests -PassThru # ./tests is now relative to ./scripts/windows
      shell: pwsh

  test-macos:
    name: Test on macOS
    runs-on: macos-latest
    # No default working-directory here
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PowerShell Core (pwsh) on macOS
      uses: actions/setup-powershell@v1.3.0 # Using a specific v1.x.x tag for better reliability
      with:
        version: 'latest' # Or a specific '7.x' version like '7.3'

    - name: Display PowerShell version (macOS)
      run: $PSVersionTable
      shell: pwsh # Use pwsh shell directly

    - name: Install Pester module (macOS)
      shell: pwsh # Use pwsh shell directly
      run: |
        Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
        Install-Module -Name Pester -Repository PSGallery -Force -SkipPublisherCheck -Scope CurrentUser -Confirm:$false
        Import-Module Pester -ErrorAction SilentlyContinue

    - name: Display Pester version (macOS)
      run: (Get-Module Pester -ListAvailable | Select-Object -First 1).Version.ToString()
      shell: pwsh # Use pwsh shell directly
      continue-on-error: true

    - name: Run Pester Tests (macOS)
      # Set the working directory specifically for this step
      working-directory: ./scripts/macos
      run: Invoke-Pester -Path ./tests -PassThru # ./tests is now relative to ./scripts/macos
      shell: pwsh # Use pwsh shell for consistency with Invoke-Pester
